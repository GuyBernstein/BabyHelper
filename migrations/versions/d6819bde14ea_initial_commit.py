"""initial commit

Revision ID: d6819bde14ea
Revises: 
Create Date: 2025-05-05 09:32:02.481074

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd6819bde14ea'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('picture', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_table('baby',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('fullname', sa.String(length=100), nullable=False),
    sa.Column('birthdate', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('picture', sa.String(length=300), nullable=True),
    sa.Column('head_circumference', sa.Float(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('baby_coparent',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'baby_id')
    )
    op.create_table('coparent_invitation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_id', sa.Integer(), nullable=False),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diaper',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('content', sa.Enum('WET', 'DIRTY', 'BOTH', 'DRY', name='diapercontent'), nullable=False),
    sa.Column('consistency', sa.Enum('SOLID', 'SOFT', 'LOOSE', 'WATERY', 'MUCOUSY', 'SEEDY', name='diaperconsistency'), nullable=True),
    sa.Column('color', sa.Enum('YELLOW', 'GREEN', 'BROWN', 'BLACK', 'RED', 'WHITE', name='diapercolor'), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feeding',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('feeding_type', sa.Enum('BREAST_LEFT', 'BREAST_RIGHT', 'BREAST_BOTH', 'BOTTLE', 'FORMULA', 'SOLIDS', 'PUMPING', name='feedingtype'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('bottle_content_type', sa.Enum('FORMULA', 'BREAST_MILK', 'MIXED', name='bottlecontenttype'), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('last_breast', sa.String(length=10), nullable=True),
    sa.Column('pumped_volume_left', sa.Float(), nullable=True),
    sa.Column('pumped_volume_right', sa.Float(), nullable=True),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('growth',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('head_circumference', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('health',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('symptoms', sa.String(length=500), nullable=True),
    sa.Column('medication', sa.Enum('ACETAMINOPHEN', 'IBUPROFEN', 'ANTIBIOTIC', 'ANTIHISTAMINE', 'OTHER', name='medicationtype'), nullable=True),
    sa.Column('medication_dose', sa.Float(), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('milestone',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('category', sa.Enum('MOTOR', 'COGNITIVE', 'LANGUAGE', 'SOCIAL', 'EMOTIONAL', 'SELF_CARE', name='milestonecategory'), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('typical_age_months', sa.Integer(), nullable=True),
    sa.Column('achieved_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('is_achieved', sa.Boolean(), nullable=True),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sleep',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('quality', sa.Enum('POOR', 'FAIR', 'GOOD', 'EXCELLENT', name='sleepquality'), nullable=True),
    sa.Column('location', sa.Enum('CRIB', 'BASSINET', 'PARENTS_ROOM', 'PARENTS_BED', 'CAR_SEAT', 'STROLLER', 'OTHER', name='sleeplocation'), nullable=True),
    sa.Column('training_method', sa.Enum('NONE', 'CRY_IT_OUT', 'FERBER', 'CHAIR', 'PICK_UP_PUT_DOWN', 'BEDTIME_FADING', 'OTHER', name='sleeptrainingmethod'), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('baby_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['baby_id'], ['baby.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sleep')
    op.drop_table('milestone')
    op.drop_table('health')
    op.drop_table('growth')
    op.drop_table('feeding')
    op.drop_table('diaper')
    op.drop_table('coparent_invitation')
    op.drop_table('baby_coparent')
    op.drop_table('notification')
    op.drop_table('baby')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
